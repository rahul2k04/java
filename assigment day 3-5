public class Customer {
    private int accountNo;
    private String accName;
    private double balance;

    public Customer(int accountNo, String accName, double balance) {
        this.accountNo = accountNo;
        this.accName = accName;
        this.balance = balance;
    }

    public synchronized void deposit(double amount) {
        System.out.println("Depositing amount: " + amount);
        balance += amount;
        System.out.println("New balance after deposit: " + balance);
        notify(); // Notify waiting thread after deposit
    }

    public synchronized void withdraw(double amount) {
        System.out.println("Withdrawing amount: " + amount);
        if (amount > balance) {
            System.out.println("Insufficient balance. Waiting for deposit...");
            try {
                wait(); // Wait for deposit if balance is insufficient
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        balance -= amount;
        System.out.println("Withdraw operation success. New balance: " + balance);
    }

    public static void main(String[] args) {
        Customer customer = new Customer(123456, "John Doe", 10000.0);

        Thread withdrawThread = new Thread(() -> customer.withdraw(12000));
        Thread depositThread = new Thread(() -> customer.deposit(3000));

        withdrawThread.start();
        depositThread.start();
    }
}
